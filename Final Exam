>> jika menggunakan auto increment
CREATE DATABASE UAS;
USE UAS;

CREATE TABLE tabel01(
	id_person int NOT null AUTO_INCREMENT,  
    nama varchar(40) not null,
    email varchar(40) not null,
    wa char(20) not null,
    password varchar(64) not null,
    PRIMARY KEY (id_person)
);

CREATE TABLE table02(
	kode_ukm varchar(4) not null,
    nama_ukm varchar(40) not null,
    owner_id int not null
);

ALTER TABLE table02
	ADD PRIMARY key (kode_ukm);
   
ALTER table table02
	add FOREIGN KEY (owner_id) REFERENCES tabel01(id_person) on DELETE RESTRICT on UPDATE CASCADE

>> jika tidak
CREATE DATABASE UAS;
USE UAS;

CREATE TABLE IF NOT EXISTS tabel01(
	-- nim char(12) NOT null AUTO_INCREMENT,
	nim char(12) NOT null,  
    nama char(40) not null,
    email varchar(40) not null,
    wa char(20) not null,
    password varchar(64) not null
);

CREATE TABLE if not EXISTS table02(
	kode_ukm char(4) not null,
    nama_ukm char(40) not null,
    nim char(12) not null
);

alter TABLE tabel01
	ADD PRIMARY KEY (nim);
ALTER TABLE table02
	ADD PRIMARY key (kode_ukm);
   
ALTER table table02
	add FOREIGN KEY (nim) REFERENCES tabel01(nim) on DELETE RESTRICT on UPDATE CASCADE

>>form_tabel01.php
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link rel="stylesheet" href="style.css">
    <title>UAS</title>
</head>
<body>
    <div>
    <form action = 'prosesdata.php' method="POST" >
        <div class="grid-container">
            <div>
                <label>Nama</label>
                <input type="text" name="nama" value="<?php if(isset($_POST['nama'])) echo htmlspecialchars($_POST['nama'])?>">
            </div>
            <?php echo "<div>";
                if(isset($errors['nama'])) echo $errors['nama'];
            echo "</div>";
            ?>
            <div>
                <label>Email</label>
                <input type="text" name="email" value="<?php if(isset($_POST['email'])) echo htmlspecialchars($_POST['email'])?>">
            </div>
            <?php echo "<div>";
                if(isset($errors['email'])) echo $errors['email'];
            echo "</div>";
            ?>
            <div>
                <label>Whatsapp</label>
                <input type="text" name="wa" value="<?php if(isset($_POST['wa'])) echo htmlspecialchars($_POST['wa'])?>">
            </div>
            <?php echo "<div>";
                if(isset($errors['wa'])) echo $errors['wa'];
            echo "</div>";
            ?>
            <div>
                <label>Password</label>
                <input type="Password" name="passwd" value="<?php if(isset($_POST['passwd'])) echo htmlspecialchars($_POST['passwd'])?>">
            </div>
            <?php echo "<div>";
                if(isset($errors['passwd'])) echo $errors['passwd'];
            echo "</div>";
            ?>
            <div>
                <input type="submit" name="ok" value="ok">
            </div>
        </div>
                
    </form>
</div>
</body>
</html>

>>prosesdata.php
<?php
	$q = new PDO('mysql:HOST=localhost;dbname=uas', 'root', '');
	$q->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

	function pushdata(){
		global $q;
		$st1 = $q->prepare('INSERT INTO tabel01(nama,email,wa,password) VALUES ( :nama, :email, :wa, SHA2(:password,0))');
		$st1->bindValue(':nama',$_POST['nama']);
		$st1->bindValue(':email',$_POST['email']);
		$st1->bindValue(':wa',$_POST['wa']);
		$st1->bindValue(':password',$_POST['passwd']);
		$st1->execute();

        // $st2 = $q->prepare('INSERT INTO tabel02(kode_ukm, nama_ukm) VALUES(:kode_ukm, :nama_ukm)');
        // $st2->bindValue(':kode_ukm',$_POST['kode_ukm']);
        // $st2->bindValue(':nama_ukm',$_POST['nama_ukm']);
        // $st2->execute();       
	}

	$errors=array();
    if(isset($_POST['ok'])){
        require 'validate.inc';
        validateName($errors, $_POST, 'nama');
        validateEmail($errors, $_POST, 'email');
        validatePassword($errors, $_POST, 'passwd');
        validateNumber($errors, $_POST, 'wa');
        //validateName($errors, $_POST, 'nama_ukm');
        if($errors){
            require 'form_table01.php';
        }else{
            pushdata(); 
        }
    }

    // if(isset($_POST['set'])){
    //     require 'validate.inc';
    //     validateNumber($errors, $_POST, 'kode_ukm');
    //     validateName($errors, $_POST, 'nama_ukm');
    //     if($errors){
    //         require 'form_table02.php';
    //     }else{
    //         pushdata(); 
    //     }
    // }
?>
>> VALIDATE.INC
<?php

<?php
function validateName(&$errors, $field_list, $field_name) {
    if (!preg_match("/^[a-zA-Z ]*$/", $field_list[$field_name]))  
        $errors[$field_name] = 'Hanya boleh alfabet';
    else if (!isset($field_list[$field_name]) || empty($field_list[$field_name]))
    	$errors[$field_name] = 'tidak boleh kosong';
}

function validateEmail(&$errors, $field_list, $field_name) {
    if (!filter_var($field_list[$field_name], FILTER_VALIDATE_EMAIL))  
        $errors[$field_name] = 'alamat email email tidak benar';
    else if (!isset($field_list[$field_name]) || empty($field_list[$field_name]))
    	$errors[$field_name] = 'tidak boleh kosong';
} 

function validatePassword(&$errors, $field_list, $field_name) {
    if (!preg_match("/\w{8,20}/", $field_list[$field_name])) 
        $errors[$field_name]= 'harus minimal 8 digit';
    else if (!preg_match("/[0-9]/", $field_list[$field_name]))  
        $errors[$field_name] = 'harus berisi nomer';
    if(!preg_match("/\w{8,20}/", $field_list[$field_name])&&!preg_match("/[0-9]/", $field_list[$field_name]))
     $errors[$field_name]= 'harus minimal 8 digit dan nomer';
}

function validateMatchPass(&$errors, $field_list, $field_name){
    if (!isset($field_list[$field_name]) || empty($field_list[$field_name])) 
        $errors[$field_name] = 'tidak boleh kosong';
    else if ($field_list['password']!==$field_list[$field_name])
        $errors[$field_name] = 'do not match';
}

function validateNumber(&$errors, $field_list, $field_name){
    if (!isset($field_list[$field_name]) || empty($field_list[$field_name])) 
        $errors[$field_name] = 'tidak boleh kosong';
    else if (!preg_match("/[0-9]/", $field_list[$field_name])) 
        $errors[$field_name]= 'harus berisi angka';
    else if (!preg_match("/\w{12,20}/", $field_list[$field_name])) 
        $errors[$field_name]= 'minimal 12';
}
?>
